version: '3.8'

networks:
  headscale_internal:
    external: true
  proxy:
    external: true

services:
  headscale:
    image: headscale/headscale:latest
    container_name: headscale
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      - TZ=Asia/Ho_Chi_Minh
    volumes:
      # Fix: Mount config to the path container expects (with .yaml extension)
      - ./config/config.yaml:/etc/headscale/config.yaml:ro
      - headscale_data:/var/lib/headscale
      - /var/run/headscale:/var/run/headscale
    networks:
      - proxy
      - headscale_internal
    ports: []
    # Fix: Explicitly specify config file path
    command: serve --config /etc/headscale/config.yaml
    labels:
      - "com.headplane.selector=headscale"
      - "me.tale.headplane.target=headscale"
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.headscale.rule=Host(`headscale.tailnet.work`)"
      - "traefik.http.routers.headscale.entrypoints=websecure"
      - "traefik.http.routers.headscale.tls=true"
      - "traefik.http.routers.headscale.tls.certresolver=letsencrypt"
      - "traefik.http.services.headscale.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.headscale-cors.headers.accessControlAllowMethods=GET,POST,PUT,PATCH,DELETE,OPTIONS"
      - "traefik.http.middlewares.headscale-cors.headers.accessControlAllowHeaders=Authorization,Content-Type,X-Requested-With"
      - "traefik.http.middlewares.headscale-cors.headers.accessControlAllowOriginList=https://admin.tailnet.work"
      - "traefik.http.routers.headscale.middlewares=headscale-cors,secure-headers"
    healthcheck:
      test: ["CMD", "headscale", "--config", "/etc/headscale/config.yaml", "version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: headscale_postgres
    restart: unless-stopped
    env_file:
      - ../.env
    environment:
      - POSTGRES_DB=headscale
      - POSTGRES_USER=headscale
      - POSTGRES_PASSWORD
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - headscale_internal
    command: >
      postgres 
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c log_statement=none
      -c log_duration=off
      -c log_lock_waits=on
      -c log_min_duration_statement=1000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U headscale -d headscale"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  headscale_data:
    driver: local
  postgres_data:
    driver: local